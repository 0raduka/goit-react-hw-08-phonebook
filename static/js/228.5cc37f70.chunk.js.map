{"version":3,"file":"static/js/228.5cc37f70.chunk.js","mappings":"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","sources":["views/registerView.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport React, { useState } from 'react';\nimport { authOperations } from '../redux/auth';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Row, Col } from 'react-bootstrap';\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div className=\"centered\">\n      <Card className=\"text-center\">\n        <Card.Img\n          variant=\"top\"\n          src=\"https://c.tenor.com/umMW5u13Z-gAAAAM/hush-quiet.gif\"\n        />\n\n        <Card.Body>\n          <Card.Title>Пcc, нужно нуменого приватных контактов ?</Card.Title>\n          <Card.Text>\n            Это останеться между нами ! <br></br>(честно, честно)\n          </Card.Text>\n        </Card.Body>\n      </Card>\n\n      <Form onSubmit={handleSubmit} className=\"m-3\">\n        <Row>\n          <Col md>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n              <Form.Label>Как величать то?</Form.Label>\n              <Form.Control\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                placeholder=\"Имячко\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n          </Col>\n          <Col md>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>А писать куда?</Form.Label>\n              <Form.Control\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                placeholder=\"Адресочек\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n          </Col>\n          <Col md>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Эт дело святое</Form.Label>\n              <Form.Control\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                placeholder=\"Парольчик\"\n                onChange={handleChange}\n              />\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Button variant=\"success\" type=\"submit\">\n          Присоединиться к клубу\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","className","variant","src","onSubmit","e","preventDefault","authOperations","md","controlId","type","placeholder","onChange","CardImg","React","ref","bsPrefix","as","Component","props","prefix","useBootstrapPrefix","_jsx","classNames","displayName","context","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","children","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","defaultProps","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Row","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push"],"sourceRoot":""}